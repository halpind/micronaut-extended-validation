plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "net.ltgt.apt-eclipse" version "0.18"
    id "net.ltgt.apt-idea" version "0.18"
    id "com.google.cloud.tools.jib" version "0.9.9"
}

apply plugin: "application"
apply plugin: "java"

version "0.1"
group "com.github.larsq"


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0.M2'
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut.configuration:micronaut-jdbc-hikari"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut.configuration:micronaut-hibernate-jpa"
    compile "io.micronaut.configuration:micronaut-liquibase:1.0.0.RC1"
    compile "io.micronaut:micronaut-http-server-netty"
    compile 'com.google.guava:guava:27.0.1-jre'
    compileOnly "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.h2database:h2"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testRuntimeOnly "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testCompile "io.micronaut.test:micronaut-test-junit5:1.0.2"
    testCompile "org.mockito:mockito-junit-jupiter:2.24.0"
    testCompile 'org.hibernate:hibernate-testing:5.4.1.Final'


}

shadowJar {
    mergeServiceFiles()
}

test {
    useJUnitPlatform() {

    }
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "validated.Application"
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
